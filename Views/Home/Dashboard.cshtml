@model dynamic

@{
    ViewData["Title"] = "Dashboard";
}

<h1>Dashboard</h1>
<div class="row">
    <div class="col-md-3">
        <div class="card text-white bg-primary mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Students</h5>
                <p class="card-text">@Model.TotalStudents</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-success mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Classes</h5>
                <p class="card-text">@Model.TotalClasses</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-warning mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Lecturers</h5>
                <p class="card-text">@Model.TotalLecturers</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-danger mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Enrollments</h5>
                <p class="card-text">@Model.TotalEnrollments</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-primary mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Courses</h5>
                <p class="card-text">@Model.TotalCourses</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-success mb-3">
            <div class="card-body">
                <h5 class="card-title">Total Grades Assigned</h5>
                <p class="card-text">@Model.TotalGradesAssigned</p>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <canvas id="dashboardChart" width="400" height="200"></canvas>
    </div>
</div>

<br>
<h1>Classes Statistics</h1>


<div class="row">
    <div class="col-md-4">
        <div class="card text-white bg-info mb-3">
            <div class="card-body">
                <h5 class="card-title">Active Classes</h5>
                <p class="card-text">@Model.ActiveClasses</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-secondary mb-3">
            <div class="card-body">
                <h5 class="card-title">Canceled Classes</h5>
                <p class="card-text">@Model.CanceledClasses</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-dark mb-3">
            <div class="card-body">
                <h5 class="card-title">Avg Students/Class</h5>
                <p class="card-text">@Model.AvgStudentsPerClass.ToString("F2")</p>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <canvas id="classTypeChart" width="400" height="200"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('dashboardChart').getContext('2d');
        const dashboardChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Students', 'Lecturers', 'Enrollments', 'Courses', 'Grades Assigned'],
                datasets: [{
                    label: 'Class Statistics',
                    data: [
                        @Model.TotalStudents, 
                        @Model.TotalLecturers, 
                        @Model.TotalEnrollments, 
                        @Model.TotalCourses,
                        @Model.TotalGradesAssigned
                    ],
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(40, 167, 69, 0.2)',
                        'rgba(220, 53, 69, 0.2)'
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(40, 167, 69, 1)',
                        'rgba(220, 53, 69, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        const classTypeCtx = document.getElementById('classTypeChart').getContext('2d');
        const classTypeChart = new Chart(classTypeCtx, {
            type: 'pie',
            data: {
                labels: ['Created', 'Started', 'Ended', 'Cancelled'],
                datasets: [{
                    label: 'Class Types',
                    data: [
                        @Model.CreatedClasses, 
                        @Model.StartedClasses, 
                        @Model.EndedClasses, 
                        @Model.CancelledClasses
                    ],
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 99, 132, 0.2)'
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 99, 132, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.raw || 0;
                                return `${label}: ${value}`;
                            }
                        }
                    }
                }
            }
        });
    </script>
}
