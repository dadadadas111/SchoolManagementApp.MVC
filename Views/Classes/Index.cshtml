@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model IEnumerable<SchoolManagementApp.MVC.Data.Class>

@{
    ViewData["Title"] = Localizer["ClassesTitle"];
}

<h1>@Localizer["ClassesHeading"]</h1>

<p>
    <a asp-action="Create" class="btn btn-success">@Localizer["CreateNewClass"]</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                @Localizer["Course"]
            </th>
            <th>
                @Localizer["Lecturer"]
            </th>
            <th>
                @Localizer["StartDate"]
            </th>
            <th>
                @Localizer["EndDate"]
            </th>
            <th>
                @Localizer["Time"]
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.Id
                </td>
                <td>
                    @item.Course.Code - @item.Course.Name
                    <span class="badge @GetStatusClass(item.Status)">
                        @item.Status
                    </span>
                </td>
                <td>
                    @item.Lecturer.FirstName @item.Lecturer.LastName
                </td>
                <td>
                    @item.StartDate.ToString("yyyy-MM-dd")
                </td>
                <td>
                    @item.EndDate.ToString("yyyy-MM-dd")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time)
                </td>
                <td>
                    @if (item.Status == "Started" || item.Status == "Created")
                    {
                        <a asp-action="ManageEnrollments" class="btn btn-success mb-1" asp-route-classId="@item.Id">@Localizer["Enroll"]</a>
                    }
                    @if (item.Status != "Cancelled")
                    {
                        <a class="btn btn-warning mb-1" asp-action="Edit" asp-route-id="@item.Id">@Localizer["Edit"]</a>
                    }
                    <a class="btn btn-primary mb-1" asp-action="Details" asp-route-id="@item.Id">@Localizer["Details"]</a>
                    @if (item.Status == "Cancelled" || item.Status == "Ended")
                    {
                        <button data-id="@item.Id" onclick="onDelete(@item.Id)" class="btn btn-danger deleteBtn mb-1" type="button">@Localizer["Delete"]</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<form asp-action="Delete" id="classDeleteForm">
    <input type="hidden" id="classid" name="Id" />
</form>

@section Scripts {
    <script>
        $(function(){
            $('.table').DataTable({
                order: [[6, 'desc']]
            });

        @if (TempData["SwalMessage"] != null)
        {
            <text>
                            Swal.fire({
                                icon: '@TempData["SwalType"]',
                                title: '@TempData["SwalMessage"]'
                            });
            </text>
        }

            $('.deleteBtn').click(function(e){
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Swal.fire(
                            // 'Deleted!',
                            // 'Your file has been deleted.',
                            // 'success'
                            // );
                            var btn = $(this);
                            var id = btn.data("id");
                            $('#classid').val(id);
                            $('#classDeleteForm').submit();
                        }
                    })
            })
        })

        function onDelete( id ){
            Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Swal.fire(
                            // 'Deleted!',
                            // 'Your file has been deleted.',
                            // 'success'
                            // );
                            $('#classid').val(id);
                            $('#classDeleteForm').submit();
                        }
                    })
        }
    </script>
}

@functions {
    private string GetStatusClass(string status)
    {
        return status switch
        {
            "Created" => "badge-primary",
            "Started" => "badge-success",
            "Ended" => "badge-secondary",
            "Cancelled" => "badge-danger",
            _ => "badge-light"
        };
    }
}